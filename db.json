[
  {
    "id": 1758037717548,
    "uploader": "Gustii",
    "title": "Vsga",
    "language": "html",
    "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF--8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>CODESHARE - Single File DB Edition</title>\n    \n    <script src=\"https://unpkg.com/@phosphor-icons/web\"></script>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/atom-one-dark.min.css\">\n\n    <style>\n        /* CSS - Eleganza v12 (Refactored) */\n        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');\n\n        :root {\n            --primary-color: #6a11cb;\n            --secondary-color: #2575fc;\n            --background-color: #f4f6fc;\n            --surface-color: #ffffff;\n            --text-color: #333;\n            --border-color: #e0e0e0;\n            --success-color: #28a745;\n            --error-color: #dc3545;\n            --shadow: 0 5px 20px rgba(0, 0, 0, 0.07);\n            --border-radius: 16px;\n            --js-color: #f7df1e;\n            --html-color: #e34f26;\n            --css-color: #1572b6;\n            --python-color: #3776ab;\n            --sql-color: #4479a1;\n            --java-color: #b07219;\n            --other-color: #6c757d;\n        }\n\n        * { margin: 0; padding: 0; box-sizing: border-box; }\n\n        body {\n            font-family: 'Poppins', sans-serif;\n            background-color: var(--background-color);\n            color: var(--text-color);\n            line-height: 1.6;\n            display: flex;\n            flex-direction: column;\n            min-height: 100vh;\n        }\n\n        .container { max-width: 1200px; margin: 0 auto; padding: 20px; }\n\n        header {\n            background: var(--surface-color); padding: 15px 0;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.05);\n            position: sticky; top: 0; z-index: 1000;\n            border-bottom: 1px solid var(--border-color);\n        }\n        nav { display: flex; justify-content: space-between; align-items: center; padding: 0 20px; }\n        .logo { \n            font-size: 1.8em; font-weight: 700; letter-spacing: 1px;\n            background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));\n            -webkit-background-clip: text; -webkit-text-fill-color: transparent;\n        }\n        .nav-links button {\n            color: #555; background: none; border: none; margin: 0 10px;\n            font-size: 1em; cursor: pointer; font-weight: 500;\n            transition: color 0.3s, background-color 0.3s; display: inline-flex; align-items: center; gap: 8px;\n            padding: 8px 12px; border-radius: 8px;\n        }\n        .nav-links button:hover { background-color: #f0f2f5; color: var(--primary-color); }\n        .nav-links button i { font-size: 1.2em; }\n        #logout-btn { background-color: #fdeeee; color: var(--error-color); }\n        #logout-btn:hover { background-color: #f8d7da; }\n\n        main { flex: 1; padding-top: 40px; }\n        .page { display: none; animation: fadeIn 0.5s ease-in-out; }\n        @keyframes fadeIn { from { opacity: 0; transform: translateY(10px); } to { opacity: 1; transform: translateY(0); } }\n        .page.active { display: block; }\n\n        .card {\n            background: var(--surface-color); padding: 40px; border-radius: var(--border-radius);\n            box-shadow: var(--shadow); margin-bottom: 30px; border-top: 4px solid var(--primary-color);\n        }\n        .card h2 { margin-bottom: 25px; font-weight: 600; text-align: center; }\n\n        .form-group { margin-bottom: 20px; }\n        .form-group label { display: flex; align-items: center; gap: 8px; margin-bottom: 10px; font-weight: 500; }\n        .form-group label i { color: var(--secondary-color); font-size: 1.2em; }\n        .form-group input, .form-group select, .form-group textarea {\n            width: 100%; padding: 12px 15px; border: 1px solid var(--border-color);\n            border-radius: 8px; font-size: 1em; font-family: 'Poppins', sans-serif;\n            transition: border-color 0.3s, box-shadow 0.3s; background-color: #fdfdff;\n        }\n        .form-group input:focus, .form-group select:focus, .form-group textarea:focus {\n            outline: none; border-color: var(--primary-color);\n            box-shadow: 0 0 0 3px rgba(106, 17, 203, 0.15);\n        }\n        .form-group textarea { min-height: 200px; resize: vertical; font-family: 'SF Mono', 'Courier New', monospace; }\n\n        .btn {\n            display: inline-flex; align-items: center; justify-content: center; gap: 10px;\n            width: 100%; padding: 15px; border: none; border-radius: 8px;\n            background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));\n            color: white; font-size: 1.1em; font-weight: 600; cursor: pointer;\n            transition: transform 0.2s, box-shadow 0.2s;\n        }\n        .btn:hover { transform: translateY(-2px); box-shadow: 0 6px 20px rgba(37, 117, 252, 0.3); }\n        .btn .spinner { display: none; width: 20px; height: 20px; border: 2px solid rgba(255,255,255,0.5); border-top-color: white; border-radius: 50%; animation: spin 1s linear infinite; }\n        .btn.loading .spinner { display: block; }\n        .btn.loading span { display: none; }\n        @keyframes spin { to { transform: rotate(360deg); } }\n\n        .link-text { text-align: center; margin-top: 20px; }\n        .link-text a { color: var(--secondary-color); text-decoration: none; font-weight: 600; cursor: pointer; }\n\n        #explore-page h2 { margin-bottom: 20px; }\n        #explore-content { display: grid; grid-template-columns: repeat(auto-fill, minmax(350px, 1fr)); gap: 30px; }\n        .snippet-card {\n            background: var(--surface-color); border-radius: var(--border-radius); box-shadow: var(--shadow);\n            overflow: hidden; display: flex; flex-direction: column;\n            transition: transform 0.3s, box-shadow 0.3s; border-top: 4px solid;\n        }\n        .snippet-card:hover { transform: translateY(-8px); box-shadow: 0 12px 25px rgba(0, 0, 0, 0.1); }\n        .snippet-header { padding: 20px; border-bottom: 1px solid var(--border-color); position: relative; }\n        .language-badge {\n            position: absolute; top: 20px; right: 20px; color: white;\n            padding: 4px 12px; border-radius: 15px; font-size: 0.8em; font-weight: 600; text-transform: capitalize;\n        }\n        .snippet-header h3 { margin: 0; color: var(--text-color); font-size: 1.25em; font-weight: 600; padding-right: 90px; }\n        .snippet-header span { font-size: 0.9em; color: #777; }\n        .snippet-code { background-color: #282c34; flex-grow: 1; position: relative; }\n        .snippet-code pre { margin: 0; white-space: pre-wrap; word-wrap: break-word; max-height: 250px; overflow-y: auto; }\n        .snippet-code pre code { padding: 20px; font-family: 'SF Mono', 'Courier New', monospace; font-size: 0.9em; }\n        .copy-btn {\n            position: absolute; top: 15px; right: 15px; background: rgba(255,255,255,0.1);\n            color: white; border: none; border-radius: 8px; cursor: pointer;\n            opacity: 0; transition: all 0.3s; font-size: 1.2em;\n            width: 40px; height: 40px; display: grid; place-items: center;\n        }\n        .snippet-card:hover .copy-btn { opacity: 0.7; }\n        .copy-btn:hover { opacity: 1; background: rgba(255,255,255,0.2); }\n\n        .border-lang-javascript, .badge-lang-javascript { border-color: var(--js-color); background-color: var(--js-color); }\n        .border-lang-html, .badge-lang-html { border-color: var(--html-color); background-color: var(--html-color); }\n        .border-lang-css, .badge-lang-css { border-color: var(--css-color); background-color: var(--css-color); }\n        .border-lang-python, .badge-lang-python { border-color: var(--python-color); background-color: var(--python-color); }\n        .border-lang-sql, .badge-lang-sql { border-color: var(--sql-color); background-color: var(--sql-color); }\n        .border-lang-java, .badge-lang-java { border-color: var(--java-color); background-color: var(--java-color); }\n        .border-lang-plaintext, .badge-lang-plaintext { border-color: var(--other-color); background-color: var(--other-color); }\n        .badge-lang-javascript { color: black !important; }\n\n        .empty-state {\n            text-align: center; padding: 60px 20px; background-color: var(--surface-color);\n            border-radius: var(--border-radius); border: 2px dashed var(--border-color);\n            grid-column: 1 / -1;\n        }\n        .empty-state svg { max-width: 120px; margin-bottom: 20px; color: var(--primary-color); }\n        .empty-state h3 { font-size: 1.5em; margin-bottom: 10px; }\n        .empty-state p { margin-bottom: 25px; color: #777; }\n        .empty-state .btn { width: auto; padding: 12px 25px; }\n\n        #toast-container { position: fixed; bottom: 20px; right: 20px; z-index: 2000; display: flex; flex-direction: column; gap: 10px; }\n        .toast {\n            padding: 15px 20px; border-radius: 8px; color: white;\n            box-shadow: 0 4px 15px rgba(0,0,0,0.2);\n            opacity: 0; transform: translateX(100%);\n            animation: slideIn 0.5s forwards, slideOut 0.5s 4.5s forwards;\n        }\n        .toast.success { background-color: var(--success-color); }\n        .toast.error { background-color: var(--error-color); }\n        .toast.info { background-color: var(--secondary-color); }\n        @keyframes slideIn { to { opacity: 1; transform: translateX(0); } }\n        @keyframes slideOut { from { opacity: 1; transform: translateX(0); } to { opacity: 0; transform: translateX(100%); } }\n\n        footer { text-align: center; padding: 20px; margin-top: 40px; color: #aaa; font-size: 0.9em; }\n    </style>\n</head>\n<body>\n\n    <header>\n        <nav class=\"container\">\n            <div class=\"logo\">CODESHARE</div>\n            <div class=\"nav-links\">\n                <span id=\"guest-view\">\n                    <button id=\"nav-login-btn\"><i class=\"ph-bold ph-sign-in\"></i><span>Login</span></button>\n                    <button id=\"nav-register-btn\"><i class=\"ph-bold ph-user-plus\"></i><span>Daftar</span></button>\n                </span>\n                <span id=\"user-view\" style=\"display: none;\">\n                    <span id=\"welcome-msg\" style=\"margin-right: 20px; align-self: center;\"></span>\n                    <button id=\"nav-upload-btn\"><i class=\"ph-bold ph-upload-simple\"></i><span>Upload Kode</span></button>\n                    <button id=\"nav-explore-btn\"><i class=\"ph-bold ph-compass\"></i><span>Jelajahi</span></button>\n                    <button id=\"logout-btn\"><i class=\"ph-bold ph-sign-out\"></i><span>Logout</span></button>\n                </span>\n            </div>\n        </nav>\n    </header>\n\n    <main class=\"container\">\n        <section id=\"login-page\" class=\"page active\">\n            <div class=\"card\">\n                <h2>Login ke Akun Anda</h2>\n                <form id=\"login-form\">\n                    <div class=\"form-group\">\n                        <label for=\"login-username\"><i class=\"ph ph-user\"></i> Username</label>\n                        <input type=\"text\" id=\"login-username\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"login-password\"><i class=\"ph ph-key\"></i> Password</label>\n                        <input type=\"password\" id=\"login-password\" required>\n                    </div>\n                    <button type=\"submit\" class=\"btn\"><span>Login</span><div class=\"spinner\"></div></button>\n                    <p class=\"link-text\">Belum punya akun? <a id=\"show-register\">Daftar di sini</a></p>\n                </form>\n            </div>\n        </section>\n\n        <section id=\"register-page\" class=\"page\">\n            <div class=\"card\">\n                <h2>Buat Akun Baru</h2>\n                <form id=\"register-form\">\n                    <div class=\"form-group\">\n                        <label for=\"register-username\"><i class=\"ph ph-user\"></i> Username</label>\n                        <input type=\"text\" id=\"register-username\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"register-password\"><i class=\"ph ph-key\"></i> Password</label>\n                        <input type=\"password\" id=\"register-password\" required>\n                    </div>\n                    <button type=\"submit\" class=\"btn\"><span>Daftar</span><div class=\"spinner\"></div></button>\n                    <p class=\"link-text\">Sudah punya akun? <a id=\"show-login\">Login di sini</a></p>\n                </form>\n            </div>\n        </section>\n\n        <section id=\"upload-page\" class=\"page\">\n            <div class=\"card\">\n                <h2>Bagikan Karya Kode Anda</h2>\n                <form id=\"upload-form\">\n                    <div class=\"form-group\">\n                        <label for=\"code-title\"><i class=\"ph ph-text-aa\"></i> Judul Kode</label>\n                        <input type=\"text\" id=\"code-title\" required placeholder=\"Contoh: Fungsi Validasi Email\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"code-language\"><i class=\"ph ph-code\"></i> Bahasa Pemrograman</label>\n                        <select id=\"code-language\">\n                            <option value=\"javascript\">JavaScript</option>\n                            <option value=\"html\">HTML</option>\n                            <option value=\"css\">CSS</option>\n                            <option value=\"python\">Python</option>\n                            <option value=\"sql\">SQL</option>\n                            <option value=\"java\">Java</option>\n                            <option value=\"plaintext\">Lainnya</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"code-content\"><i class=\"ph ph-file-code\"></i> Kode Anda</label>\n                        <textarea id=\"code-content\" required></textarea>\n                    </div>\n                    <button type=\"submit\" class=\"btn\"><span>Upload Kode</span><div class=\"spinner\"></div></button>\n                </form>\n            </div>\n        </section>\n\n        <section id=\"explore-page\" class=\"page\">\n            <h2>Jelajahi Kode Terbaru</h2>\n            <div id=\"explore-content\">\n                </div>\n        </section>\n    </main>\n\n    <footer>\n        <p>CODESHARE &copy; 2025 - DB Edition</p>\n    </footer>\n    \n    <div id=\"toast-container\"></div>\n\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js\"></script>\n    \n    <script>\n        document.addEventListener('DOMContentLoaded', () => {\n            // --- KONFIGURASI GITHUB ---\n            // GANTIKAN DENGAN NILAI ANDA.\n            // Buat Personal Access Token (PAT) di GitHub dengan scope `repo`.\n            const GITHUB_PAT = 'YOUR_GITHUB_PERSONAL_ACCESS_TOKEN'; \n            const GITHUB_OWNER = 'YOUR_GITHUB_USERNAME';\n            const GITHUB_REPO = 'Db'; // Sesuai permintaan, nama repo adalah 'Db'\n            const DB_FILE_PATH = 'db.json'; // Sesuai permintaan, nama file adalah 'db.json'\n\n            // --- Selektor DOM ---\n            const pages = document.querySelectorAll('.page');\n            const exploreContent = document.getElementById('explore-content');\n            const GITHUB_API_URL = `https://api.github.com/repos/${GITHUB_OWNER}/${GITHUB_REPO}/contents/${DB_FILE_PATH}`;\n\n            // --- Fungsi Bantuan ---\n            const showToast = (message, type = 'info') => {\n                const container = document.getElementById('toast-container');\n                const toast = document.createElement('div');\n                toast.className = `toast ${type}`;\n                toast.textContent = message;\n                container.appendChild(toast);\n                setTimeout(() => toast.remove(), 5000);\n            };\n\n            const showPage = (pageId) => {\n                pages.forEach(p => p.classList.toggle('active', p.id === pageId));\n            };\n\n            const escapeHtml = (unsafe) => unsafe.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#039;\");\n\n            // --- Logika Autentikasi & Navigasi ---\n            const updateNav = (username = null) => {\n                const guestView = document.getElementById('guest-view');\n                const userView = document.getElementById('user-view');\n                guestView.style.display = username ? 'none' : 'flex';\n                userView.style.display = username ? 'flex' : 'none';\n                if (username) {\n                    document.getElementById('welcome-msg').textContent = `Halo, ${username}!`;\n                }\n            };\n\n            const checkLoginStatus = () => {\n                const user = localStorage.getItem('loggedInUser');\n                updateNav(user);\n                if (user) {\n                    showPage('explore-page');\n                    loadSnippets();\n                } else {\n                    showPage('login-page');\n                }\n            };\n\n            // --- Interaksi dengan Database GitHub (db.json) ---\n            async function getDb() {\n                try {\n                    const response = await fetch(GITHUB_API_URL, {\n                        headers: { \n                            'Authorization': `token ${GITHUB_PAT}`,\n                            'Accept': 'application/vnd.github.v3+json',\n                         }\n                    });\n                    if (response.status === 404) {\n                        return { sha: null, data: [] };\n                    }\n                    if (!response.ok) {\n                        throw new Error(`Gagal mengambil database: ${response.statusText}`);\n                    }\n                    const fileData = await response.json();\n                    const decodedContent = atob(fileData.content);\n                    return { sha: fileData.sha, data: JSON.parse(decodedContent) };\n                } catch (error) {\n                    showToast(error.message, 'error');\n                    return { sha: null, data: [] };\n                }\n            }\n            \n            async function loadSnippets() {\n                exploreContent.innerHTML = `<p>Memuat kode terbaru...</p>`;\n                const { data } = await getDb();\n\n                exploreContent.innerHTML = '';\n                if (!data || data.length === 0) {\n                    renderEmptyState();\n                    return;\n                }\n\n                data.reverse().forEach(renderSnippetCard);\n                hljs.highlightAll();\n            }\n            \n            async function updateDb(newData, sha) {\n                const contentBase64 = btoa(JSON.stringify(newData, null, 2));\n                const body = {\n                    message: `Update database: ${new Date().toISOString()}`,\n                    content: contentBase64,\n                    sha: sha,\n                };\n\n                const response = await fetch(GITHUB_API_URL, {\n                    method: 'PUT',\n                    headers: {\n                        'Authorization': `token ${GITHUB_PAT}`,\n                        'Accept': 'application/vnd.github.v3+json',\n                    },\n                    body: JSON.stringify(body)\n                });\n                \n                if (!response.ok) {\n                    const errorData = await response.json();\n                    throw new Error(errorData.message || 'Gagal memperbarui database.');\n                }\n            }\n\n\n            // --- Render UI Dinamis ---\n            const renderSnippetCard = (data) => {\n                const lang = data.language?.toLowerCase() || 'plaintext';\n                const card = document.createElement('div');\n                card.className = `snippet-card border-lang-${lang}`;\n                card.innerHTML = `\n                    <div class=\"snippet-header\">\n                        <div class=\"language-badge badge-lang-${lang}\">${lang}</div>\n                        <h3>${escapeHtml(data.title)}</h3>\n                        <span>Oleh: ${escapeHtml(data.uploader)}</span>\n                    </div>\n                    <div class=\"snippet-code\">\n                        <pre><code class=\"language-${lang}\">${escapeHtml(data.code)}</code></pre>\n                        <button class=\"copy-btn\"><i class=\"ph ph-copy\"></i></button>\n                    </div>`;\n                exploreContent.appendChild(card);\n            };\n\n            const renderEmptyState = () => {\n                exploreContent.innerHTML = `\n                    <div class=\"empty-state\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"currentColor\" viewBox=\"0 0 256 256\"><rect width=\"256\" height=\"256\" fill=\"none\"></rect><path d=\"M88,134.9,173.3,200a8,8,0,0,0,10.7-1.9L228,134.9a8,8,0,0,0-5.9-13.3H33.9a8,8,0,0,0-5.9,13.3L72,200a8,8,0,0,0,10.7,1.9L128,168Z\" opacity=\"0.2\"></path><path d=\"M112,112,72,160l-56-64\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\"></path><path d=\"M144,112l40,48,56-64\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\"></path><path d=\"M33.9,121.6H222.1a8,8,0,0,1,5.9,13.3L184,200a8,8,0,0,1-10.7,1.9L128,168,82.7,201.9a8,8,0,0,1-10.7-1.9L28,134.9A8,8,0,0,1,33.9,121.6Z\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\"></path><line x1=\"128\" y1=\"32\" x2=\"128\" y2=\"64\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\"></line><line x1=\"192\" y1=\"64\" x2=\"178.2\" y2=\"77.8\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\"></line><line x1=\"64\" y1=\"64\" x2=\"77.8\" y2=\"77.8\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\"></line></svg>\n                        <h3>Database Masih Kosong</h3>\n                        <p>Jadilah yang pertama membagikan kode di sini!</p>\n                        <button id=\"empty-state-upload-btn\" class=\"btn\"><i class=\"ph-bold ph-upload-simple\"></i><span>Upload Kode Pertama Anda</span></button>\n                    </div>`;\n                document.getElementById('empty-state-upload-btn').addEventListener('click', () => showPage('upload-page'));\n            };\n            \n            // --- Logika Form (disingkat, karena sama seperti sebelumnya) ---\n            document.getElementById('register-form').addEventListener('submit', (e) => {\n                e.preventDefault();\n                const username = e.target.querySelector('#register-username').value;\n                const password = e.target.querySelector('#register-password').value;\n                if(localStorage.getItem(username)) { showToast('Username sudah ada!', 'error'); return; }\n                localStorage.setItem(username, password);\n                showToast('Registrasi berhasil! Silakan login.', 'success');\n                showPage('login-page');\n            });\n\n            document.getElementById('login-form').addEventListener('submit', (e) => {\n                e.preventDefault();\n                const username = e.target.querySelector('#login-username').value;\n                const password = e.target.querySelector('#login-password').value;\n                if(localStorage.getItem(username) && localStorage.getItem(username) === password) {\n                    localStorage.setItem('loggedInUser', username);\n                    checkLoginStatus();\n                    showToast(`Selamat datang kembali, ${username}!`, 'success');\n                } else {\n                    showToast('Username atau password salah!', 'error');\n                }\n            });\n\n            // --- Event Listeners ---\n            document.getElementById('nav-login-btn').addEventListener('click', () => showPage('login-page'));\n            document.getElementById('nav-register-btn').addEventListener('click', () => showPage('register-page'));\n            document.getElementById('nav-upload-btn').addEventListener('click', () => showPage('upload-page'));\n            document.getElementById('nav-explore-btn').addEventListener('click', () => { showPage('explore-page'); loadSnippets(); });\n            document.getElementById('show-register').addEventListener('click', () => showPage('register-page'));\n            document.getElementById('show-login').addEventListener('click', () => showPage('login-page'));\n            document.getElementById('logout-btn').addEventListener('click', () => { localStorage.removeItem('loggedInUser'); checkLoginStatus(); showToast('Anda telah logout.', 'info'); });\n\n            document.getElementById('upload-form').addEventListener('submit', async (e) => {\n                e.preventDefault();\n                const btn = e.target.querySelector('button[type=\"submit\"]');\n                btn.classList.add('loading');\n                btn.disabled = true;\n\n                try {\n                    const { sha, data: currentDb } = await getDb();\n                    const newSnippet = {\n                        id: Date.now(),\n                        uploader: localStorage.getItem('loggedInUser') || 'Anonim',\n                        title: document.getElementById('code-title').value,\n                        language: document.getElementById('code-language').value,\n                        code: document.getElementById('code-content').value,\n                        createdAt: new Date().toISOString()\n                    };\n                    currentDb.push(newSnippet);\n                    await updateDb(currentDb, sha);\n\n                    showToast('Kode berhasil diunggah!', 'success');\n                    e.target.reset();\n                    document.getElementById('nav-explore-btn').click();\n                } catch (error) {\n                    showToast(error.message, 'error');\n                } finally {\n                    btn.classList.remove('loading');\n                    btn.disabled = false;\n                }\n            });\n\n            exploreContent.addEventListener('click', (e) => {\n                const copyBtn = e.target.closest('.copy-btn');\n                if (copyBtn) {\n                    const code = copyBtn.closest('.snippet-code').querySelector('code').innerText;\n                    navigator.clipboard.writeText(code).then(() => {\n                        showToast('Kode disalin!', 'success');\n                        copyBtn.innerHTML = '<i class=\"ph ph-check\"></i>';\n                        setTimeout(() => { copyBtn.innerHTML = '<i class=\"ph ph-copy\"></i>'; }, 2000);\n                    });\n                }\n            });\n            \n            // Inisialisasi Aplikasi\n            checkLoginStatus();\n        });\n    </script>\n\n</body>\n</html>\n",
    "createdAt": "2025-09-16T15:48:37.551Z"
  }
]